#!/usr/bin/python3

import argparse
import asyncio
import sys

from stim.heart.improvised import Excitement


async def amain(detector: Excitement, input: str):
    if input.endswith(".socket"):
        await detector.read_socket(input)
    else:
        await detector.read_file(input)


def main():
    # TODO: allow to use a function for intensity
    # TODO: implement a slow start

    parser = argparse.ArgumentParser(description="Tone pattern generator")
    parser.add_argument("input", metavar="file.{socket,json}", action="store",
                        help="UNIX socket or JSONl history file to use to read heartbeat data")
    parser.add_argument("--quiet", "-q", action="store_true",
                        help="do not print values as they are processed")
    args = parser.parse_args()

    detector = Excitement(quiet=args.quiet)

    try:
        asyncio.run(amain(detector, args.input))
    except KeyboardInterrupt:
        print("Shutting down...")
    finally:
        print("Cleanup...")


if __name__ == "__main__":
    sys.exit(main())
