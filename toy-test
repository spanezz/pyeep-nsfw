#!/usr/bin/python3

import argparse
import asyncio
import logging
import sys

import pyeep.aio
import pyeep.app
from stim import toy, cnc
from stim.toy_gtk import ToysView

log = logging.getLogger(__name__)


class App(pyeep.gtk.GtkApp, pyeep.aio.AIOApp):
    def __init__(self, args: argparse.Namespace, title: str):
        super().__init__(args, title=title)

        self.add_component(toy.Toys, client_name=title, iface=args.iface)
        self.add_component(cnc.CncReceiver)
        toys_view = self.add_component(ToysView)

        self.vbox.pack_start(toys_view, True, True, 0)

    async def aio_main(self):
        self.head.loop = asyncio.get_event_loop()
        async with self.toy:
            self.log_toy.attach(self.toy)
            await self.toy.start()
            self.toy.pattern_queue.append(0)
            await asyncio.gather(
                self.toy.play_pattern(),
            )

    def ui_main(self):
        self.head.start()
        super().ui_main()


def main():
    parser = App.argparser("Low-level manual fiddling with toys")
    parser.add_argument("-i", "--iface", metavar="address", action="store", default="ws://127.0.0.1:12345",
                        help="Intiface Engine address to connect to")
    args = parser.parse_args()

    with App(args, title="Toy test") as app:
        app.main()


if __name__ == "__main__":
    sys.exit(main())
