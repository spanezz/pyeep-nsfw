#!/usr/bin/python3

import argparse
import logging
import sys

import pyeep.gtk
import pyeep.aio
import pyeep.app
from stim import toy, cnc, scenes
from stim.toy_gtk import ToysView

log = logging.getLogger(__name__)


class App(pyeep.gtk.GtkApp, pyeep.aio.AIOApp):
    def __init__(self, args: argparse.Namespace, **kwargs):
        super().__init__(args, **kwargs)

        self.toys_view = self.add_component(ToysView)

        self.add_component(toy.Toys, client_name=self.title, iface=args.iface)
        self.add_component(cnc.CncReceiver)

    def build_main_window(self):
        super().build_main_window()

        action = pyeep.gtk.Gio.SimpleAction.new("eagerness", None)
        action.connect("activate", self.start_scene, scenes.Eagerness)
        self.gtk_app.add_action(action)

        scenes_menu = pyeep.gtk.Gio.Menu()
        scenes_menu.append("Eagerness", "app.eagerness")

        menu = pyeep.gtk.Gio.Menu()
        menu.append_submenu("Scenes", scenes_menu)
        self.gtk_app.set_menubar(menu)
        self.window.set_show_menubar(True)

    def start_scene(self, action, param, scene):
        self.add_component(scene)

    def on_activate(self, app):
        super().on_activate(app)
        self.vbox.append(self.toys_view)
        self.toys_view.set_vexpand(True)

    def ui_main(self):
        self.head.start()
        super().ui_main()


def main():
    parser = App.argparser("Low-level manual fiddling with toys")
    parser.add_argument("-i", "--iface", metavar="address", action="store", default="ws://127.0.0.1:12345",
                        help="Intiface Engine address to connect to")
    args = parser.parse_args()

    with App(args, title="Toy test", application_id="org.enricozini.toy_test") as app:
        app.main()


if __name__ == "__main__":
    sys.exit(main())
